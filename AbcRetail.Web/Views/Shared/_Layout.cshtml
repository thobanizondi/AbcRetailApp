<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - ABC Retail</title>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <environment include="Development">
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    </environment>
</head>
<body>
<header class="main-nav">
    <div class="logo">abc<span style="color:#000">retail</span></div>
    <nav>
        <a href="/" class="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Home"?"active":"")">Home</a>
        <a href="/Product" class="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Product"?"active":"")">Catalogue</a>
        @if (User.Identity?.IsAuthenticated == true && (User.IsInRole("Customer") || User.IsInRole("Admin"))) {
            if(User.IsInRole("Customer")){
                <a href="/Order/Create" class="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Order" && ViewContext.RouteData.Values["action"]?.ToString()=="Create"?"active":"")">New Order</a>
            }
            <a href="/Order/Track" class="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Order" && ViewContext.RouteData.Values["action"]?.ToString()=="Track"?"active":"")">Orders</a>
        }
        @* Admin specific links *@
        @if (User.Identity?.IsAuthenticated == true && User.IsInRole("Admin")){
            <a href="/Product/Create" class="@(ViewContext.RouteData.Values["controller"]?.ToString()=="Product" && ViewContext.RouteData.Values["action"]?.ToString()=="Create"?"active":"")">Add Product</a>
            <a href="/CustomerManagement" class="@(ViewContext.RouteData.Values["controller"]?.ToString()=="CustomerManagement"?"active":"")">Customers</a>
            <a href="/Logs" class="">SystemLogs</a>
        }
    </nav>
    <div class="flex center">
        <button id="themeToggle" class="btn outline" style="margin-left:16px;padding:8px 14px;font-size:12px;">Dark</button>
        @if (User.Identity?.IsAuthenticated == true){
            <span class="small" style="margin-left:12px;">Hi @User.Identity.Name</span>
            <a href="/Account/Logout" class="btn outline" style="margin-left:12px;">Logout</a>
        } else {
            <a href="/Account/Login" class="btn outline" style="margin-left:12px;">Login</a>
            <a href="/Account/Register" class="btn outline" style="margin-left:8px;">Sign Up</a>
        }
    </div>
</header>
<div class="container">
    @RenderBody()
</div>
<footer class="footer container">
    <div>© @DateTime.UtcNow.Year ABC Retail Demo · <span class="small">Azure Storage + MVC sample</span></div>
</footer>
<script>
    const btn = document.getElementById('themeToggle');
    const key = 'abc-theme';
    function apply(t){ document.documentElement.classList.toggle('dark', t==='dark'); btn.textContent = t==='dark' ? 'Light' : 'Dark'; }
    let theme = localStorage.getItem(key)||'light';
    apply(theme);
    btn.addEventListener('click',()=>{ theme = theme==='dark'?'light':'dark'; localStorage.setItem(key, theme); apply(theme); });

    // Session auto-clear when last tab closes:
    (function(){
        if(!('localStorage' in window)) return;
        const TAB_KEY='abc.tab.count';
        const LAST_ACTION='abc.last.action';
        function inc(){
            const n=parseInt(localStorage.getItem(TAB_KEY)||'0',10)+1; localStorage.setItem(TAB_KEY,String(n));
        }
        function dec(){
            const n=parseInt(localStorage.getItem(TAB_KEY)||'0',10)-1; localStorage.setItem(TAB_KEY,String(Math.max(0,n)));
            return Math.max(0,n);
        }
        inc();
        window.addEventListener('beforeunload',()=>{
            // mark navigation vs close: if the page becomes hidden then unload quickly with a visibilitychange it's likely navigation
            localStorage.setItem(LAST_ACTION, document.visibilityState==='hidden'?'nav':'close');
        });
        window.addEventListener('unload',()=>{
            try {
                const remaining=dec();
                // Only attempt beacon logout if user is authenticated (server will no-op if already signed out)
                if(remaining===0){
                    // Small delay to allow other tabs finishing unload to update count
                    setTimeout(()=>{
                        const still=parseInt(localStorage.getItem(TAB_KEY)||'0',10);
                        if(still===0){
                            navigator.sendBeacon && navigator.sendBeacon('/Account/LogoutBeacon');
                        }
                    },75);
                }
            }catch{}
        });
        // Clean up stale counter if all tabs closed without reset (e.g., crash) by resetting when opening first tab
        document.addEventListener('visibilitychange',()=>{
            if(document.visibilityState==='visible'){
                const n=parseInt(localStorage.getItem(TAB_KEY)||'0',10);
                if(n<1){ localStorage.setItem(TAB_KEY,'1'); }
            }
        });
    })();
</script>
@RenderSection("Scripts", required: false)
</body>
</html>
